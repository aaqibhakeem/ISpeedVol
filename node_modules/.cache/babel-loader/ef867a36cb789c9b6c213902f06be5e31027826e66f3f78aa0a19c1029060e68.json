{"ast":null,"code":"// // import React, { useState } from 'react';\n\n// const YourComponent = ({events,setEvents}) => {\n//     // State to manage form data\n//     const [formData, setFormData] = useState({\n//         eventName: '',\n//         description: '',\n//         address: '',\n//         imageUpload: null\n//     });\n//     // State to store events\n\nconst [choice, setChoice] = useState(null);\n//     // Function to handle form field changes\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData(prevState => ({\n//             ...prevState,\n//             [name]: value\n//         }));\n//     };\n\n//     // Function to handle file input change\n//     const handleFileChange = (e) => {\n//         const file = e.target.files[0];\n//         setFormData(prevState => ({\n//             ...prevState,\n//             imageUpload: file\n//         }));\n//     };\n\n//     // Function to handle form submission\n//     const saveEvent = () => {\n//         // Construct event object\n//         const event = {\n//             eventName: formData.eventName,\n//             description: formData.description,\n//             address: formData.address,\n//             imageUpload: formData.imageUpload\n//         };\n\n//         // Push the event object to the events array\n//         setEvents(prevEvents => [...prevEvents, event]);\n\n//         // Optionally, you can log the events array to verify the data\n//         console.log(events);\n//     };\n\n//     return (\n//         <div>\n//             <div className='container mt-5' id='form'>\n//                 <h3 className='text-center' id='formhead'>\n//                     Event\n//                 </h3>\n//                 <form>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"eventName\">Event Name:</label>\n//                         <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             id=\"eventName\"\n//                             name=\"eventName\"\n//                             value={formData.eventName}\n//                             onChange={handleInputChange}\n//                             required\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"description\">Description of the Event:</label>\n//                         <textarea\n//                             className=\"form-control\"\n//                             id=\"description\"\n//                             name=\"description\"\n//                             value={formData.description}\n//                             onChange={handleInputChange}\n//                             rows={3}\n//                             required\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"address\">Address:</label>\n//                         <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             id=\"address\"\n//                             name=\"address\"\n//                             value={formData.address}\n//                             onChange={handleInputChange}\n//                             required\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"imageUpload\">Upload Image:</label>\n//                         <input\n//                             type=\"file\"\n//                             className=\"form-control-file\"\n//                             id=\"imageUpload\"\n//                             name=\"imageUpload\"\n//                             accept=\"image/*\"\n//                             onChange={handleFileChange}\n//                         />\n//                     </div>\n//                     <div className=\"text-center\">\n//                         <button\n//                             type=\"button\"\n//                             className=\"btn btn-success\"\n//                             id=\"hireform-btn\"\n//                             onClick={saveEvent}\n//                         >\n//                             Save Event\n//                         </button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export.modules ={ events }; // Exporting both YourComponent function and events array","map":{"version":3,"names":["choice","setChoice","useState"],"sources":["C:/Users/Jeelan/OneDrive/Desktop/CS/iSpeedVol/frontend/src/Pages/HireForm.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n\r\n// const YourComponent = ({events,setEvents}) => {\r\n//     // State to manage form data\r\n//     const [formData, setFormData] = useState({\r\n//         eventName: '',\r\n//         description: '',\r\n//         address: '',\r\n//         imageUpload: null\r\n//     });\r\n//     // State to store events\r\n   \r\nconst [choice,setChoice] = useState(null);\r\n//     // Function to handle form field changes\r\n//     const handleInputChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData(prevState => ({\r\n//             ...prevState,\r\n//             [name]: value\r\n//         }));\r\n//     };\r\n\r\n//     // Function to handle file input change\r\n//     const handleFileChange = (e) => {\r\n//         const file = e.target.files[0];\r\n//         setFormData(prevState => ({\r\n//             ...prevState,\r\n//             imageUpload: file\r\n//         }));\r\n//     };\r\n\r\n//     // Function to handle form submission\r\n//     const saveEvent = () => {\r\n//         // Construct event object\r\n//         const event = {\r\n//             eventName: formData.eventName,\r\n//             description: formData.description,\r\n//             address: formData.address,\r\n//             imageUpload: formData.imageUpload\r\n//         };\r\n\r\n//         // Push the event object to the events array\r\n//         setEvents(prevEvents => [...prevEvents, event]);\r\n\r\n//         // Optionally, you can log the events array to verify the data\r\n//         console.log(events);\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className='container mt-5' id='form'>\r\n//                 <h3 className='text-center' id='formhead'>\r\n//                     Event\r\n//                 </h3>\r\n//                 <form>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"eventName\">Event Name:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className=\"form-control\"\r\n//                             id=\"eventName\"\r\n//                             name=\"eventName\"\r\n//                             value={formData.eventName}\r\n//                             onChange={handleInputChange}\r\n//                             required\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"description\">Description of the Event:</label>\r\n//                         <textarea\r\n//                             className=\"form-control\"\r\n//                             id=\"description\"\r\n//                             name=\"description\"\r\n//                             value={formData.description}\r\n//                             onChange={handleInputChange}\r\n//                             rows={3}\r\n//                             required\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"address\">Address:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className=\"form-control\"\r\n//                             id=\"address\"\r\n//                             name=\"address\"\r\n//                             value={formData.address}\r\n//                             onChange={handleInputChange}\r\n//                             required\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"imageUpload\">Upload Image:</label>\r\n//                         <input\r\n//                             type=\"file\"\r\n//                             className=\"form-control-file\"\r\n//                             id=\"imageUpload\"\r\n//                             name=\"imageUpload\"\r\n//                             accept=\"image/*\"\r\n//                             onChange={handleFileChange}\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"text-center\">\r\n//                         <button\r\n//                             type=\"button\"\r\n//                             className=\"btn btn-success\"\r\n//                             id=\"hireform-btn\"\r\n//                             onClick={saveEvent}\r\n//                         >\r\n//                             Save Event\r\n//                         </button>\r\n//                     </div>\r\n//                 </form>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export.modules ={ events }; // Exporting both YourComponent function and events array\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,CAACA,MAAM,EAACC,SAAS,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;AACzignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}